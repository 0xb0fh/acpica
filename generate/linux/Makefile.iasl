 

PROG=	iasl
SRCS=	aslcompilerparse.c aslcompilerlex.c aslanalyze.c aslcodegen.c \
	aslcompile.c aslerror.c aslfiles.c asllength.c \
	asllisting.c aslload.c asllookup.c aslmain.c aslmap.c aslopcodes.c \
	asloperands.c aslresource.c aslrestype1.c aslrestype2.c \
	asltree.c aslutils.c \
	../core/utils/cmalloc.c \
	../core/utils/cmdebug.c \
	../core/utils/cmdelete.c \
	../core/utils/cmglobal.c \
	../core/utils/cmobject.c \
	../core/utils/cmutils.c \
	../core/namespace/nsaccess.c \
	../core/namespace/nsalloc.c \
	../core/namespace/nsdump.c \
	../core/namespace/nsnames.c \
	../core/namespace/nsobject.c \
	../core/namespace/nssearch.c \
	../core/namespace/nsutils.c \
	../core/namespace/nswalk.c \
	../interpreter/parser/psopcode.c \
	../interpreter/parser/psutils.c \
	../interpreter/dispatcher/dswscope.c \
	../interpreter/dispatcher/dswstate.c \
	../os_interfaces/osunixxf.c

NOMAN=	YES
CFLAGS+= -Wall -Wno-unused -Wstrict-prototypes -D_LINUX -D_ACPI_ASL_COMPILER -I../include 

#YACC=	yacc
YACC=	bison
YFLAGS+= -v -d
LEX=	lex
LFLAGS+= -i

#.if $(YACC) == "bison"
YFLAGS+= -y -pAslCompiler
#.else
#CFLAGS+= -D_USE_BERKELEY_YACC
#.endif

aslmain : $(patsubst %.c,%.o, $(SRCS))
	$(CC) $(LDFLAGS) $(patsubst %.c,%.o, $(SRCS)) \
		$(LOADLIBES) $(LDLIBS) -o iasl

CLEANFILES= y.output y.tab.c y.tab.h aslcompiler.y.h \
	aslcompilerparse.c aslcompilerlex.c iasl

aslcompilerparse.c: aslcompiler.y
	${YACC} ${YFLAGS} aslcompiler.y
	cp y.tab.c aslcompilerparse.c
	cp y.tab.h aslcompiler.y.h

aslcompilerlex.c: aslcompiler.l
	${LEX} ${LFLAGS} -PAslCompiler -oaslcompilerlex.c aslcompiler.l

clean : 
	rm -f $(CLEANFILES) $(patsubst %.c,%.o, $(SRCS))

